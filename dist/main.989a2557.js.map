{"version":3,"sources":["src/biology.js","src/animationAction.js","src/bullet.js","src/mario.js","src/goomba.js","src/turtle.js","src/coin.js","src/map.js","src/game.js","src/config.js","src/mapData.js","main.js"],"names":["Boilogy","game","x","y","bloodFlow","g","vy","width","blockPixel","height","speed","direction","gravity","hasBarrier","Math","floor","yv","getGravityControl","col","row","offsetCol","abs","map","offset","mapData","letTopBlockIndex","rows","rightTopBlockIndex","letBottomBlockIndex","rightBottomBlockIndex","leftTopLeftBlockIndex","leftBottomLeftBlockIndex","rightTopRightBlockIndex","rightBottomRightBlockIndex","bullet","addRole","role","rx","ry","AnimationAction","actionImgs","actionIndex","rate","img","context","drawImage","length","Bullet","imageList","fireName","killability","a","v","animationAction","update","kill","draw","roleList","i","constructor","name","isCollsion","undefined","mario","killCounts","Mario","lifeCounts","isLittleBoy","coins","mapScrollInstance","fireTime","fireColdTime","actionsImgTypeMap","left","big","imageTypes","small","right","directionAction","actionType","jump","bulletImgs","setup","images","getImages","initActionEvents","action","status","registerAction","move","fire","offsetNum","scrollEnd","canvasElement","Goomba","killMario","Turtle","flys","actionImgsLeft","actionImgsRight","getImgs","Coin","actionImageList","Map","cols","itelsWidth","itelsHeight","startIndex","endIndex","type","image","pixelX","pixelY","drawItel","scrollFront","w","h","Game","config","getContext","actionMap","framerate","drawCoins","addGoomba","addTurtle","addGoombaInterval","setInterval","random","goomba","turtle","push","actions","Object","keys","dispatch","eventFunc","key","window","addEventListener","e","indexOf","initEventBind","loop","setTimeout","listenAction","filter","isOutOfGame","showGameOver","clearRect","drawKillCountsAndCoins","font","fillStyle","fillText","coinPositions","coin","clearInterval","ctx","can","strokeStyle","fillRect","textAlign","_config","brick1","require","brick2","brick3","brick4","brick5","brick6","brick7","mario8","mario9","mario10","mario11","mario12","mario13","goomba1","goomba2","turtle1","turtle2","turtle3","turtle4","bullet1","bullet2","bullet3","bullet4","coin1","coin2","coin3","coin4","asset","canvas","document","querySelector","loadImage","srcMap","Promise","resolve","imgsRequest","reject","Image","onload","path","src","all","then","__init","allImages","obj","item"],"mappings":"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","file":"main.989a2557.js","sourceRoot":"..","sourcesContent":["export default class Boilogy{\n    constructor(game, x, y, bloodFlow){\n        this.x = x;\n        this.y = y;\n        this.game = game;\n        this.bloodFlow = bloodFlow || 100;\n        this.g = 2;\n        this.vy=0;\n        this.width = this.game.blockPixel;\n        this.height = this.width;\n        this.speed = 4;\n        this.direction = -1;\n    }\n\n    getGravityControl(){\n        this.gravity+=0.4\n        this.y += this.g\n\n        if(!this.hasBarrier('bottom')){\n            this.y = this.y + this.g;\n        }else{\n            this.y = Math.floor(this.y/this.game.blockPixel)*this.game.blockPixel;\n            this.g = 2;\n        }\n    }\n\n    update(){\n        this.gravity+=0.4\n        this.y += 10\n\n        if(this.hasBarrier('top')){\n            this.yv=0;\n        }\n\n        this.getGravityControl();//每个生物都受重力作用；\n\n    }\n\n\n    hasBarrier(direction){\n        const x = this.x;\n        const y = this.y;\n\n        //地图无偏移情况下，马里奥x，y坐标点位于地图的row行，col列\n        const col = Math.floor(x/this.game.blockPixel);\n        const row = Math.floor(y/this.game.blockPixel);\n\n        //偏移了多少列\n        const offsetCol = Math.floor(Math.abs(this.game.map.offset)/40);\n\n        const mapData = this.game.map.map;\n\n        const letTopBlockIndex = (col+offsetCol)*this.game.rows+row;//左上角顶部\n        const rightTopBlockIndex = (col+offsetCol+1)*this.game.rows+row;//右上角顶部\n\n        const letBottomBlockIndex = (col+offsetCol)*this.game.rows+row+(this.height/this.game.blockPixel);//左下角顶部\n        const rightBottomBlockIndex = (col+offsetCol+1)*this.game.rows+row+(this.height/this.game.blockPixel);//右下角顶部\n\n        const leftTopLeftBlockIndex = Math.abs(col+offsetCol)*this.game.rows+row;//左边\n        const leftBottomLeftBlockIndex = (col+offsetCol)*this.game.rows+row+ (this.height/this.game.blockPixel)-1;\n\n        const rightTopRightBlockIndex = (col+offsetCol+1)*this.game.rows+row;//右边\n        const rightBottomRightBlockIndex = (col+offsetCol+1)*this.game.rows+row+ (this.height/this.game.blockPixel)-1;\n\n        \n\n        switch(direction){\n            case 'top':\n                return mapData[letTopBlockIndex]!=0 || mapData[rightTopBlockIndex]!=0;\n            case 'bottom':\n                return mapData[letBottomBlockIndex]!=0 || mapData[rightBottomBlockIndex]!=0;\n            case 'left':\n                return mapData[leftTopLeftBlockIndex]!=0 || mapData[leftBottomLeftBlockIndex]!=0;\n            case 'right':\n                return mapData[rightTopRightBlockIndex]!=0 || mapData[rightBottomRightBlockIndex]!=0;\n\n        }\n    }\n\n    fire(bullet){\n        this.game.addRole(bullet);\n    }\n\n    \n    isCollsion(role){\n        if(role.bloodFlow<=0) return false;\n        const x = this.x;\n        const y = this.y;\n        const rx = role.x;\n        const ry = role.y;\n       \n        if(x>=rx && x<=rx+role.width){\n            if(y>=ry && y<=ry+role.height){\n                return true;\n            }\n        }\n\n        if(rx>=x && rx<=x+this.width){\n            if(ry>=y && ry<=y+this.height){\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n}","export default class AnimationAction{\n    constructor(game, actionImgs, x, y, width, height){\n        this.actionImgs = actionImgs || [];\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.actionIndex = 0;\n\n        this.width = width || this.game.blockPixel;\n        this.height = height || this.width;\n\n        this.rate = 2;\n    }\n\n    draw(){\n        const img = this.actionImgs[this.actionIndex].img;\n        if(!img) return;\n        const context = this.game.context;\n        const x = this.x;\n        const y = this.y;\n        context.drawImage(img, x, y, this.width, this.height);\n    }\n\n    update(){\n        this.rate -=1;\n        if(this.rate<0) this.rate = 2;\n\n        if(this.rate!=0) return;\n\n       \n        this.actionIndex+=1;\n       \n        if(this.actionIndex >= this.actionImgs.length){\n            this.actionIndex = 0;\n        }\n    }\n}","import AnimationAction from './animationAction';\n\nexport default  class Bullet{\n    constructor(game,imageList, x, y, direction, fireName, killability){\n        this.game = game;\n        this.direction = direction // 1是向右， -1向左\n        this.x = x;\n        this.y = y;\n        this.a = 5;//加速度\n        this.v = 1; //速度\n        this.fireName = fireName  //发射者的名字\n        this.killability = killability || 100; //子弹杀伤力;\n        this.width = 15;\n        this.height = 15;\n        this.imageList= imageList;\n        this.context = this.game.context;\n\n        this.bloodFlow = 1;\n\n        this.animationAction = new AnimationAction(this.game, this.imageList, this.x, this.y, this.height);\n    }\n\n    update(){\n        this.animationAction.update();\n        this.kill();\n\n        this.v+=this.a;\n        this.x += (this.v*this.direction);\n\n        this.animationAction.x = this.x;\n        \n        this.a-= 0.4;\n        \n        this.a = this.a<=0 ? 0 : this.a;\n\n    }\n\n    draw(){\n        this.animationAction.draw();\n    }\n\n\n    kill(){\n        const roleList = this.game.roleList;\n        for(let i=0; i<roleList.length; i++){\n            const role = roleList[i];\n         \n            if(role.constructor.name!=Bullet && this.isCollsion(role) && role.name!=undefined && role.name!=this.fireName){\n                role.bloodFlow-=this.killability;\n                this.bloodFlow = 0;\n                this.game.mario.killCounts++;\n                continue;\n            }\n        }\n    }\n\n    isCollsion(role){\n        if(role.bloodFlow<=0) return false;\n        const x = this.x;\n        const y = this.y;\n        const rx = role.x;\n        const ry = role.y;\n\n        if(x>=rx && x<=rx+role.width){\n            if(y>=ry && y<=ry+role.height){\n                return true;\n            }\n        }\n\n        if(rx>=x && rx<=x+this.width){\n            if(ry>=y && ry<=y+this.height){\n                return true;\n            }\n        }\n\n        return false;\n    }\n}","import Boilogy from './biology';\nimport Bullet from './bullet';\nimport AnimationAction from './animationAction';\n\nexport default class Mario extends Boilogy {\n    constructor(game, x, y) {\n        super(game, x, y);\n        this.game = game;\n        this.name = 'Mario';\n        this.lifeCounts = 3;\n        this.isLittleBoy = 0;\n        this.direction = 1;\n\n        this.speed = 8;\n        this.coins = 0;//金币数；\n        this.killCounts = 0;//杀死的怪物数量\n\n        this.x = x || 80;\n        this.y = y || 520;\n\n        this.yv = 0//起跳加速度\n\n        this.mapScrollInstance = 600;\n\n        this.g = 3;//重力加速度\n\n        this.fireTime = 8//开火频率\n\n        this.fireColdTime = 0//还剩多少冷却频率\n\n        this.width = this.game.blockPixel;\n        this.height = this.game.blockPixel * 2;\n\n        this.actionsImgTypeMap = {\n            left: {\n                big: [this.game.imageTypes['8'], this.game.imageTypes['9'], this.game.imageTypes['10']],\n                small: [this.game.imageTypes['14'], this.game.imageTypes['15'], this.game.imageTypes['16']]\n            },\n            right: {\n                big: [this.game.imageTypes['11'], this.game.imageTypes['12'], this.game.imageTypes['13']],\n                small: [this.game.imageTypes['17'], this.game.imageTypes['18'], this.game.imageTypes['19']]\n            }\n        }\n\n        this.directionAction = {\n            '1': 'left',\n            '-1': 'right',\n        }\n\n        this.actionType = {\n            jump: false\n        }\n\n        this.bulletImgs = [\n            this.game.imageTypes['31'],\n            this.game.imageTypes['32'],\n            this.game.imageTypes['33'],\n            this.game.imageTypes['34']\n        ]\n\n        this.setup();\n    }\n\n    setup() {\n\n        const images = this.getImages();\n\n        this.animationAction = new AnimationAction(this.game, images, this.x, this.y, this.width, this.height);\n\n        this.initActionEvents();\n    }\n\n    getImages() {\n        const action = this.directionAction[this.direction];\n\n        const status = this.isLittleBoy ? 'small' : 'big';\n\n        const images = this.actionsImgTypeMap[action][status];\n\n        return images;\n    }\n\n\n    initActionEvents() {//绑定键盘按键\n        this.game.registerAction('a', () => {\n            this.direction = -1\n            this.move(this.direction);\n        })\n\n        this.game.registerAction('d', () => {\n            this.direction = 1\n            this.move(this.direction)\n        })\n\n        this.game.registerAction('w', () => {\n            if (this.actionType.jump) return;\n            this.yv = -25;\n            this.actionType.jump = true;\n        })\n\n        this.game.registerAction('j', () => {\n            if (this.fireColdTime != 0 || this.bloodFlow<=0) return;\n            this.fireColdTime = this.fireTime;\n            const bullet = new Bullet(this.game, this.bulletImgs, this.x + (this.width / 2), this.y + (this.height / 2) + 10, this.direction, this.name);\n            this.fire(bullet);\n        })\n    }\n\n    move(direction) {\n\n        if (direction > 0) {//往右\n            if (this.hasBarrier('right')) {\n                this.game.map.offsetNum = 0;\n            } else {\n                if (this.x <= this.mapScrollInstance || this.game.map.scrollEnd()) {\n                    this.x += this.speed;\n                    this.game.map.offsetNum = 0;\n                } else {\n                    this.game.map.offsetNum = this.speed;\n                }\n            }\n\n        } else if (direction < 0) {//往左\n            if (this.hasBarrier('left')) {\n                this.game.map.offsetNum = 0;\n            } else {\n                if (this.game.map.offset == 0 || this.game.map.scrollEnd()) {\n                    this.x -= this.speed;\n                    if (this.x <= 0) {\n                        this.x = 0;\n                    }\n                } else {\n\n                    this.game.map.offsetNum = -this.speed;\n\n\n                }\n            }\n\n        }\n\n        this.animationAction.actionImgs = this.getImages();//根据不同的方向切换马里奥走动方向的图片\n\n    }\n\n\n\n    update() {\n        this.fireColdTime--;//消耗开火冷却时间\n        this.fireColdTime = this.fireColdTime <= 0 ? 0 : this.fireColdTime;\n\n        if (this.yv < 0) {\n\n            if (this.hasBarrier('top')) {\n                this.yv = 0;\n            } else {\n                this.yv += 1.6;\n                this.y += this.yv;\n            }\n\n\n        } else {\n            this.g += 2\n            if (this.g > 15) this.g = 15;\n            if (!this.hasBarrier('bottom')) {\n                this.y = this.y + this.g;\n            } else {\n                this.y = Math.floor(this.y / this.game.blockPixel) * 40;\n                this.actionType.jump = false;\n                this.g = 1;\n            }\n        }\n\n\n        this.animationAction.x = this.x;\n        this.animationAction.y = this.y;\n\n        this.animationAction.update();\n\n        if(this.y>this.game.canvasElement.height){\n            this.bloodFlow=0;\n        }\n\n    }\n\n    draw() {\n        this.animationAction.draw();\n    }\n\n}","import Boilogy from './biology';\nimport AnimationAction from './animationAction';\n\nexport default class Goomba extends Boilogy {\n    constructor(game, x, y) {\n        super(game, x, y, 100);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.name = 'Goomab';\n        this.speed = 4;\n\n        this.direction = -1;\n\n        this.width = this.game.blockPixel;\n        this.height = this.width;\n\n        this.width = this.game.blockPixel;\n        this.height = this.width;\n\n        this.actionImgs = [this.game.imageTypes['20'], this.game.imageTypes['21']]\n\n        this.animationAction = new AnimationAction(this.game, this.actionImgs, this.x, this.y, this.width, this.height);\n    }\n\n\n    update() {\n\n        super.update();\n\n\n         if(super.hasBarrier('right') || super.hasBarrier('left')){\n            this.direction = -1*this.direction;\n        }\n\n        if(this.direction<0){\n            this.x += (this.speed+this.game.map.offsetNum)*this.direction;\n        }else{\n            this.x += (this.speed-this.game.map.offsetNum)\n        }\n\n       \n        this.animationAction.y = this.y;\n        this.animationAction.x = this.x;\n\n        this.animationAction.update();\n\n        this.killMario();\n    }\n\n    draw() {\n        this.animationAction.draw();\n    }\n\n    killMario(){\n        if(this.isCollsion(this.game.mario)){\n            this.game.mario.bloodFlow = 0;\n        }\n    }\n\n}","import Boilogy from './biology';\nimport AnimationAction from './animationAction';\n\nexport default class Turtle extends Boilogy {\n    constructor(game, x, y) {\n        super(game, x, y, 100);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.name = 'Turtle';\n        this.speed = 4;\n\n        this.direction = -1;\n\n        this.width = this.game.blockPixel;\n        this.height = this.width;\n\n        this.width = this.game.blockPixel;\n        this.height = this.width;\n\n        this.flys = 4;\n\n        this.actionImgsLeft = [this.game.imageTypes['24'], this.game.imageTypes['25']];\n        this.actionImgsRight = [this.game.imageTypes['26'], this.game.imageTypes['27']];\n\n\n        this.animationAction = new AnimationAction(this.game, this.getImgs(), this.x, this.y, this.width, this.height);\n\n    }\n\n    getImgs(){\n        return this.direction == -1 ? this.actionImgsLeft : this.actionImgsRight;\n    }\n\n\n    update(){\n\n        this.flys--;\n\n        if(this.flys<=0){\n            if(this.flys<=-6){\n                this.flys = 4;\n            }else{\n                this.y-= 4;\n            }\n        }else{\n            super.update();\n        }\n\n\n        if (super.hasBarrier('right') || super.hasBarrier('left')) {\n            this.direction = -1 * this.direction;\n        }\n\n        if (this.direction < 0) {\n            this.x += (this.speed + this.game.map.offsetNum) * this.direction;\n        } else {\n            this.x += (this.speed - this.game.map.offsetNum)\n        }\n\n\n        this.animationAction.y = this.y;\n        this.animationAction.x = this.x;\n\n        this.animationAction.update();\n\n        this.killMario();\n\n        this.animationAction.actionImgs = this.getImgs();;\n    }\n\n    draw() {\n        this.animationAction.draw();\n    }\n\n    killMario() {\n        if (this.isCollsion(this.game.mario)) {\n            this.game.mario.bloodFlow = 0;\n        }\n    }\n\n}","import AnimationAction from './animationAction';\n\nexport default  class Coin{\n    constructor(game, x, y){\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.bloodFlow = 1;\n        this.actionImageList = [\n            this.game.imageTypes['41'],\n            this.game.imageTypes['42'],\n            this.game.imageTypes['43'],\n            this.game.imageTypes['44']\n        ];\n\n        this.width = this.game.blockPixel;\n        this.height =this.width;\n\n        this.animationAction = new AnimationAction(this.game, this.actionImageList, this.x, this.y);\n    }\n\n    update(){\n        const mario = this.game.mario;\n        this.x -= this.game.map.offsetNum;\n        this.animationAction.x = this.x\n\n        this.animationAction.update();\n        if( mario && mario.name=='Mario'){\n            \n            if(this.isCollsion(mario)){\n                mario.coins +=1;\n                this.bloodFlow = 0;\n            }\n        }\n    }\n\n    draw(){\n        if(this.bloodFlow>0){\n            this.animationAction.draw();\n        }\n    }\n\n    isCollsion(role){\n        if(role.bloodFlow<=0) return false;\n        const x = this.x;\n        const y = this.y;\n        const rx = role.x;\n        const ry = role.y;\n       \n        if(x>=rx && x<=rx+role.width){\n            if(y>=ry && y<=ry+role.height){\n                return true;\n            }\n        }\n\n        if(rx>=x && rx<=x+this.width){\n            if(ry>=y && ry<=y+this.height){\n                return true;\n            }\n        }\n\n        return false;\n    }\n}","export default  class Map {\n    constructor(game, mapData) {\n        this.game = game;\n\n        this.map = mapData;\n\n        this.cols = this.game.cols;\n        this.rows = this.game.rows;\n\n        this.itelsWidth = this.game.blockPixel;\n        this.itelsHeight = this.itelsWidth;\n\n        this.imageTypes = this.game.imageTypes;\n\n        this.offset = 0;//偏移量\n\n        this.offsetNum = 0;\n\n    }\n\n    draw(){\n        if(this.offset>0) this.offset = 0;\n        let startIndex = (Math.floor(Math.abs(this.offset/40)))* this.rows;\n        if(startIndex<0){\n            startIndex = Math.abs(startIndex);\n        }\n\n        const endIndex = startIndex + (this.cols+1)*this.rows;\n\n        \n        for(let i=startIndex; i< endIndex; i++){\n\n            const col = i%16;\n            const row = Math.floor(i/16);\n            const type = this.map[i];\n            const image = type ? this.imageTypes[type].img : undefined;\n\n            const pixelX = row*this.itelsWidth + this.offset;\n            const pixelY = col*this.itelsHeight;\n\n            \n            if(image){\n                this.drawItel(image, pixelX, pixelY, this.itelsWidth, this.itelsHeight);\n            }\n        }\n    }\n\n    scrollFront(){\n        return this.offset>0;\n    }\n\n    scrollEnd(){\n        return  this.offset <= ( this.game.canvasElement.width - (this.map.length/this.game.rows) * this.game.blockPixel);\n    }\n\n    update(){\n        this.offset-=this.offsetNum;\n\n        if(this.scrollFront()) this.offset = 0;//如果滚到了最左边则不予滚动\n        //如果滚到了最右边则不予滚动\n        if(this.scrollEnd()){\n            this.offset = this.game.canvasElement.width- ((this.map.length/16) *40);\n        }\n    }\n\n    drawItel(image, x, y, w, h){\n        this.game.context.drawImage(image, x, y, w, h);\n    }\n\n}","import Mario from './mario';\nimport Goomba from './goomba';\nimport Turtle from './turtle';\nimport Coin from './coin';\nimport Map from './map';\n\nexport default class Game {\n    constructor(name, canvasElement, imageTypes, mapData, config) {\n        this.name = name || 'Mario Game';\n        this.canvasElement = canvasElement;\n        this.context = this.canvasElement.getContext('2d');\n        this.blockPixel = 40;\n        this.rows = 16;\n        this.cols = 32;\n\n        this.config = config;\n\n        this.roleList = [];\n\n        this.actionMap = {};\n\n        this.imageTypes = imageTypes;\n\n        this.mapData = mapData;\n\n        this.map = new Map(this, this.mapData);\n\n        this.addRole(this.map);\n\n        this.framerate = 50;\n\n        this.offset = 0;\n\n\n\n        this.mario = new Mario(this);//加载马里奥\n        this.addRole(this.mario);\n\n        this.drawCoins();//初始化金币的位置\n\n\n        this.addGoomba();\n        this.addTurtle();\n\n        this.setup();\n\n    }\n\n    addGoomba() {\n        const time = 400;\n        this.addGoombaInterval = setInterval(() => {\n            if (this.roleList.length >= 50 || Math.random() * Math.abs(this.map.offset) < time) return;\n            const x = Math.random() * 1200 + 40;\n            const y = Math.random() * 200;\n            const goomba = new Goomba(this, x, y);\n            this.addRole(goomba);\n        }, 1000)\n    }\n\n    addTurtle() {\n        const time = 400;\n        this.addGoombaInterval = setInterval(() => {\n            if (this.roleList.length >= 50 || Math.random() * Math.abs(this.map.offset) < time) return;\n            const x = Math.random() * 1200 + 40;\n            const y = Math.random() * 200;\n            const turtle = new Turtle(this, x, y);\n            this.addRole(turtle);\n        }, 1000)\n    }\n\n    addRole(role) {\n        this.roleList.push(role);\n    }\n\n    listenAction() {\n        const actions = Object.keys(this.actionMap);\n        for (let i = 0; i < actions.length; i++) {\n            const action = this.actionMap[actions[i]];\n\n            if (action.dispatch) {\n                action.eventFunc && action.eventFunc();\n            }\n        }\n    }\n\n    registerAction(key, eventFunc) {\n        this.actionMap[key] = {\n            key,\n            eventFunc,\n            dispatch: false\n        }\n    }\n\n    initEventBind() {\n        window.addEventListener('keydown', (e) => {\n            const key = e.key;\n            this.actionMap[key] && (this.actionMap[key].dispatch = true);\n        })\n\n        window.addEventListener('keyup', (e) => {\n            const key = e.key;\n            this.actionMap[key] && (this.actionMap[key].dispatch = false);\n            const keys = ['a', 's', 'w', 'd'];\n            if (keys.indexOf(key) != -1) {\n                this.map.offsetNum = 0;\n            }\n        })\n    }\n\n    setup() {\n        this.initEventBind();\n\n        this.loop();\n    }\n\n    loop() {\n        if (this.mario.bloodFlow<=0) return;\n       \n        setTimeout(() => {\n            this.update();\n            this.draw();\n\n            this.loop();\n        }, this.framerate)\n    }\n\n    update() {\n        this.listenAction();\n\n\n        this.roleList = this.roleList.filter((role) => {\n            role.update && role.update(this.canvasElement);\n            return !this.isOutOfGame(role);\n        })\n\n    }\n\n    draw() {\n        if(this.mario.bloodFlow<=0){\n            this.showGameOver();\n            return;\n        }\n        this.context.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n        for (let i = 0; i < this.roleList.length; i++) {\n            const role = this.roleList[i];\n            role.draw && role.draw(this.canvasElement);\n        }\n\n        this.drawKillCountsAndCoins()\n    }\n\n    isOutOfGame(role) {//检测范围 || 或者血量为0;\n        if(role.constructor.name=='Coin' && role.bloodFlow>0) return false;\n        if ((role.x + this.canvasElement.width) < 0 || role.x > this.canvasElement.width || role.bloodFlow <= 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    drawKillCountsAndCoins() {\n        this.context.font = \"18px Verdana\";\n        this.context.fillStyle = '#f1a22f'\n        this.context.fillText('kills：' + this.mario.killCounts, 10, 20)\n        this.context.fillText('coins：' + this.mario.coins, 10, 40)\n    }\n\n    drawCoins() {\n        const coins = this.config.coinPositions;\n        for (let i = 0; i < coins.length; i++) {\n            const coin = new Coin(this, coins[i][0], coins[i][1]);\n            this.addRole(coin);\n        }\n\n    }\n\n    showGameOver() {\n        clearInterval(this.addGoombaInterval);\n        this.roleList = [];\n       \n        const ctx = this.context;\n        const can = this.canvasElement;\n\n        ctx.strokeStyle = '#000';\n        ctx.fillStyle = 'rgba(0,0,0,0.6)';\n        ctx.fillRect(0, 0, can.width, can.height);\n\n\n        ctx.font = \"100px Comic Sans MS\";\n        ctx.fillStyle = \"red\";\n        ctx.textAlign = \"center\";\n        ctx.fillText('GAME OVER', can.width / 2, can.height / 2 -50);\n\n        ctx.font = \"20px Comic Sans MS\";\n        ctx.fillStyle = \"#f1a22f\";\n        ctx.textAlign = \"center\";\n        ctx.fillText('杀怪数：'+ this.mario.killCounts, can.width / 2, can.height / 2 +50);\n        ctx.fillText('金币数：'+this.mario.coins, can.width / 2, can.height / 2 +100);\n        \n    }\n\n}","\n//砖块图片类型\nconst brick1 = require('../asset/tiles/ground/bricks.bmp');\nconst brick2 = require('../asset/tiles/ground/bricks2.bmp');\nconst brick3 = require('../asset/tiles/ground/cloud.bmp');\nconst brick4 = require('../asset/tiles/ground/grass.bmp');\nconst brick5 = require('../asset/tiles/ground/bricks.bmp');\nconst brick6 = require('../asset/tiles/ground/sand.bmp');\nconst brick7 = require('../asset/tiles/ground/snowy.bmp');\n\n\n//mario动作图片\nconst mario8 = require('../asset/characters/big/player1r.png');\nconst mario9 = require('../asset/characters/big/player2r.png');\nconst mario10 = require('../asset/characters/big/player3r.png');\nconst mario11 = require('../asset/characters/big/player1l.png');\nconst mario12 = require('../asset/characters/big/player2l.png');\nconst mario13 = require('../asset/characters/big/player3l.png');\n\n\n//蘑菇动作图片\nconst goomba1 = require('../asset/characters/goomba1.png');\nconst goomba2 = require('../asset/characters/goomba2.png');\n\n\n//乌龟动作图片\nconst turtle1 = require('../asset/characters/turtle/flyl1.png');\nconst turtle2 = require('../asset/characters/turtle/flyl2.png');\nconst turtle3 = require('../asset/characters/turtle/flyr1.png');\nconst turtle4 = require('../asset/characters/turtle/flyr2.png');\n\n\n//子弹图片\nconst bullet1 = require('../asset/fire1.png');\nconst bullet2 = require('../asset/fire2.png');\nconst bullet3 = require('../asset/fire3.png');\nconst bullet4 = require('../asset/fire4.png');\n\n//金币图片\nconst coin1 = require('../asset/bonus/coin1.png');\nconst coin2 = require('../asset/bonus/coin2.png');\nconst coin3 = require('../asset/bonus/coin3.png');\nconst coin4 = require('../asset/bonus/coin4.png');\n\nconst _config = {\n    asset:{\n        //地图对应的材料图片地址\n        1: brick1,\n        2: brick2,\n        3: brick3,\n        4: brick4,\n        5: brick5,\n        6: brick6,\n        7: brick7,\n\n        //马里奥动作图片地址\n\n        //大人\n        //往右走动画\n        8: mario8,\n        9: mario9,\n        10: mario10,\n\n        //往左走动画\n        11: mario11,\n        12: mario12,\n        13: mario13,\n\n        //goomba\n        20: goomba1,\n        21: goomba2,\n        //tumple left\n        24: turtle1,\n        25: turtle2,\n        //right\n        26: turtle3,\n        27: turtle4,\n\n        //马里奥的子弹\n        31: bullet1,\n        32: bullet2,\n        33: bullet3,\n        34: bullet4,\n\n        //资源道具\n        //金币\n        41: coin1,\n        42: coin2,\n        43: coin3,\n        44: coin4\n    },\n    coinPositions:[\n        [1000,400],\n        [1040,400],\n        [1080,400],\n        [1120,400],\n        [1160,400],\n        [1200,400],\n        [1300,500],\n        [1340,500],\n        [1380,500],\n        [1420,500],\n        [1460,500],\n        [1500,500],\n\n        [2000,400],\n        [2040,400],\n        [2080,400],\n        [2120,400],\n        [2160,400],\n        [2200,400],\n        [3300,500],\n        [3340,500],\n        [3380,500],\n        [3420,500],\n        [3460,500],\n        [3500,500]\n    ]\n}\n\nexport default _config;","\n\n// 32 * 16 为一屏; 横向为Y轴 纵向为X轴；\nconst mapData = [\n//这是第一屏\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n\n\n   //第二屏\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n\n\n   //三屏幕\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   //四屏\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   1, 1, 1, 1, 0, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n\n\n   //五屏\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5,\n\n\n\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5,\n\n   0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n\n   0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n\n   0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n\n   0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,\n\n   0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n\n   0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n\n   0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n\n   0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n]\n\nexport default mapData;","import Game from './src/game';\nimport config from './src/config';\nimport mapData from './src/mapData';\n\nconst canvas = document.querySelector('#can');\n\nconst loadImage = (srcMap) => {\n    return new Promise((resolve) => {\n\n        const imgsRequest = [];\n\n        Object.keys(srcMap).map((type) => {\n\n            imgsRequest.push(\n                new Promise((resolve, reject) => {\n                    const img = new Image();\n\n                    img.onload = () => {\n                        resolve({\n                            type,\n                            img,\n                            path: img.src\n                        });\n\n                    }\n\n                    img.src = srcMap[type];\n                })\n            )\n        })\n\n        Promise.all(imgsRequest).then((images) => {\n            resolve(images)\n        })\n    })\n}\n\nconst __init = (allImages) => {\n    const game = new Game('Mario', canvas, allImages, mapData, config)\n}\n\n\n//加载完图片后，游戏初始化；\nloadImage(config.asset).then((allImages) => {\n    const obj = {}\n    allImages.map((item) => {\n        obj[item.type] = item;\n    })\n\n    __init(obj)\n})\n"]}